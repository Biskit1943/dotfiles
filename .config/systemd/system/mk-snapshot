#!/bin/bash
DATE=`date +%Y-%m-%d`
HOME_SIZE="6G"
ROOT_SIZE="6G"

snapshot() {
    if [ "$1" != "root" ] && [ "$1" != "home" ]; then
        echo "wrong call $1"
        exit -1
    fi

    IFS='
    '
    if [ "$1" == "root" ]; then
        REGEX='.?(root)-([0-9]{4}-[0-9]{2}-[0-9]{2}).?'
    elif [ "$1" == "home" ]; then
        REGEX='.?(home)-([0-9]{4}-[0-9]{2}-[0-9]{2}).?'
    else
        echo "wrong call $q"
        exit -1
    fi

    # Check for old snapshorts
    SNAPSHOTS=$(/bin/lvs | /bin/grep -E $REGEX)
    echo "Found snapshots:"
    echo "$SNAPSHOTS"

    NAMES=""

    for snap in $SNAPSHOTS
    do
        if [[ $snap =~ $REGEX ]]; then
    	    date="${BASH_REMATCH[2]}"
    	    if [ $date = $DATE ]; then
               echo "Snapshot of today already exist"
    	       return 0
    	    fi
	    # Name is: (root|home)-DATE
	    name="${BASH_REMATCH[1]}-${BASH_REMATCH[2]}"
    	    NAMES+=$name
    	    NAMES+=" "
        fi
    done

    # Reset IFS
    IFS=' '

    NAMES=($NAMES)
    if [ ${#NAMES[@]} -ge 3 ]; then
    	oldest=0

    	for name in $NAMES
    	do
            if [[ $name =~ $REGEX ]]
            then
    	        if [ $(/bin/date -d ${BASH_REMATCH[2]} +%s) -ge $oldest ]; then
    		    oldest=$(/bin/date -d ${BASH_REMATCH[2]} +%s)
    	        fi
	    fi
    	done

    	OLDEST="$1-$(/bin/date --date=@$oldest +%Y-%m-%d)"
    	/bin/lvremove --force main/$OLDEST
    	echo "Removed Snapshot: main/$OLDEST"
    fi

    SIZE="1G"
    if [ "$1" == "root" ]; then
        SIZE=$ROOT_SIZE
    elif [ "$1" == "home" ]; then
        SIZE=$HOME_SIZE
    else
        echo "can't set Size"
        exit -1
    fi

    /bin/lvcreate --snapshot --size $SIZE --name "$1-$DATE" /dev/mapper/main-$1
    echo "Created Snapshot: $1-$DATE"
}

snapshot root
snapshot home
